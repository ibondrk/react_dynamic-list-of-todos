{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","selectTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","completeStatus","setCompleteStatus","filterText","setFilterText","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todoId","useState","modal","setModal","user","setUser","currentTodo","find","useEffect","userId","response","href","email","name","App","setTodos","isLoading","setIsLoading","setTodoId","query","setQuery","finally","filtredTodos","useMemo","filter","visibleTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e806bad.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n          const handleSelectTodo = () => (selectedTodoId === id\n            ? selectTodo(0)\n            : selectTodo(id));\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleSelectTodo}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames({\n                      'far fa-eye-slash': (selectedTodoId === id),\n                      'far fa-eye': (selectedTodoId !== id),\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ntype Props = {\n  completeStatus: string;\n  setCompleteStatus: (status: string) => void;\n  filterText: string;\n  setFilterText: (text: string) => void;\n};\n\nexport const TodoFilter: FC<Props> = ({\n  completeStatus,\n  setCompleteStatus,\n  filterText,\n  setFilterText,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={completeStatus}\n            onChange={(event) => setCompleteStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterText}\n          onChange={(event) => setFilterText(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filterText !== '' && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear search query\"\n              onClick={() => setFilterText('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC, useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todoId: number;\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n};\n\nexport const TodoModal: FC<Props> = ({\n  todoId,\n  todos,\n  selectTodo,\n}) => {\n  const [modal, setModal] = useState<boolean>(true);\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo = todos.find(({ id }) => id === todoId);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then((response) => {\n          setUser(response);\n        });\n    }\n  }, []);\n\n  if (!modal) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setModal(false);\n                selectTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import {\n  FC,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [todoId, setTodoId] = useState(0);\n  const [completeStatus, setCompleteStatus] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((response) => {\n        setTodos(response);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  //\n  const filtredTodos = useMemo(() => (todos.filter(todo => {\n    // console.log ('filtred');\n\n    switch (completeStatus) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return true;\n    }\n  })), [todos, completeStatus]);\n\n  //\n  const visibleTodos = useMemo(() => (\n    filtredTodos.filter(todo => {\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    })\n  ), [filtredTodos, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                completeStatus={completeStatus}\n                setCompleteStatus={setCompleteStatus}\n                filterText={query}\n                setFilterText={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={todoId}\n                    selectTodo={setTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0 && (\n        <TodoModal\n          todos={visibleTodos}\n          todoId={todoId}\n          selectTodo={setTodoId}\n        />\n\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}